public class PlayfairCipherSimple 
{ 
 static char[][] key = { 
 {'M','O','N','A','R'}, 
 {'C','H','Y','B','D'}, 
 {'E','F','G','I','K'}, 
 {'L','P','Q','S','T'}, 
 {'U','V','W','X','Z'} 
 }; 
 static int[] pos(char c) { 
 for(int i=0;i<5;i++) 
 for(int j=0;j<5;j++) 
 if(key[i][j]==c) return new int[]{i,j}; 
 return null; 
 } 
 static String process(String msg, boolean encrypt) { 
 msg = msg.replace("J","I"); 
 if(msg.length()%2!=0) msg+="X"; 
 String res=""; 
 int shift = encrypt ? 1 : -1; // +1 for encrypt, -1 for decrypt 
 for(int i=0;i<msg.length();i+=2){ 
 int[] p1=pos(msg.charAt(i)), p2=pos(msg.charAt(i+1)); 
 if(p1[0]==p2[0]){ // same row 
 res+=key[p1[0]][(p1[1]+5+shift)%5]; 
 res+=key[p2[0]][(p2[1]+5+shift)%5]; 
 } 
 else if(p1[1]==p2[1]){ // same col 
 res+=key[(p1[0]+5+shift)%5][p1[1]]; 
 res+=key[(p2[0]+5+shift)%5][p2[1]]; 
 } 
 else { // rectangle 
 res+=key[p1[0]][p2[1]]; 
 res+=key[p2[0]][p1[1]]; 
 } 
 } 
 return res; 
}
public static void main(String[] args) 
{ 
 String msg="HELLO"; 
String enc = process(msg,true); 
 String dec = process(enc,false); 
System.out.println("Original : " + msg); 
 System.out.println("Encrypted: " + enc); 
 System.out.println("Decrypted: " + dec); 
 } 
}
